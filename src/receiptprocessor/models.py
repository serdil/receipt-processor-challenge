# generated by fastapi-codegen:
#   filename:  task/api.yml
#   timestamp: 2025-03-26T13:20:42+00:00

from __future__ import annotations

from datetime import date, time
from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Item(BaseModel):
    shortDescription: constr(pattern=r'^[\w\s\-]+$') = Field(
        ...,
        description='The Short Product Description for the item.',
        examples=['Mountain Dew 12PK'],
    )
    price: constr(pattern=r'^\d+\.\d{2}$') = Field(
        ..., description='The total price payed for this item.', examples=['6.49']
    )


class ReceiptsProcessPostResponse(BaseModel):
    id: constr(pattern=r'^\S+$') = Field(
        ..., examples=['adb6b560-0eef-42bc-9d16-df48f30e89b2']
    )


class ReceiptsIdPointsGetResponse(BaseModel):
    points: Optional[int] = Field(None, examples=[100])


class Receipt(BaseModel):
    retailer: constr(pattern=r'^[\w\s\-&]+$') = Field(
        ...,
        description='The name of the retailer or store the receipt is from.',
        examples=['M&M Corner Market'],
    )
    purchaseDate: date = Field(
        ...,
        description='The date of the purchase printed on the receipt.',
        examples=['2022-01-01'],
    )
    purchaseTime: time = Field(
        ...,
        description='The time of the purchase printed on the receipt. 24-hour time expected.',
        examples=['13:01'],
    )
    items: List[Item] = Field(..., min_length=1)
    total: constr(pattern=r'^\d+\.\d{2}$') = Field(
        ..., description='The total amount paid on the receipt.', examples=['6.49']
    )
